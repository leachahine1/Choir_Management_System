{
    "sourceFile": "ISFM/modules/Rehearsal/models/rehearsalmodel.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1714943463490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1714943608217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         $this->load->dbforge();\r\n     }\r\n \r\n     //This function is checking that have any rehearsal in that date.\r\n-    public function checkRehearsal($a, $b) {\r\n+    public function checkRehearsal($a) {\r\n         $data = array();\r\n         $query = $this->db->get_where('rehearsal_routine', array('rehearsal_id' => $a));\r\n         foreach ($query->result_array() as $row) {\r\n             $data[] = $row;\r\n"
                },
                {
                    "date": 1714992343883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n \r\n     //This function return a rehearsal title in a class.\r\n     public function rehearsalTitleForMarkshit($Choir_id) {\r\n         $data = array();\r\n-        $query = $this->db->get_where('add_rehearsal', array('Choir_id' => $Choir_id, 'publish' => 'Publish'));\r\n+        $query = $this->db->get_where('add_rehearsal', array('Choir_id' => $Choir_id));\r\n         foreach ($query->result_array() as $row) {\r\n             $data[] = $row;\r\n         }return $data;\r\n     }\r\n"
                }
            ],
            "date": 1714943463490,
            "name": "Commit-0",
            "content": "<?php\r\nif (!defined('BASEPATH')) {\r\n    exit('No direct script access allowed');\r\n}\r\n\r\nclass RehearsalModel extends CI_Model {\r\n    /**\r\n     * This model is using into the Rehearsal controller\r\n     * Load : $this->load->model('rehearsalmodel');\r\n     */\r\n    function __construct() {\r\n        parent::__construct();\r\n        $this->load->dbforge();\r\n    }\r\n\r\n    //This function is checking that have any rehearsal in that date.\r\n    public function checkRehearsal($a, $b) {\r\n        $data = array();\r\n        $query = $this->db->get_where('rehearsal_routine', array('rehearsal_id' => $a));\r\n        foreach ($query->result_array() as $row) {\r\n            $data[] = $row;\r\n        }\r\n        $data = array_filter($data);\r\n        if (!empty($data)) {\r\n            return 'Have An Rehearsal';\r\n        } else {\r\n            return 'No Any Rehearsal';\r\n        }\r\n    }\r\n\r\n    //This function will return only Choir title\r\n    public function getChoirTitle() {\r\n        $data = array();\r\n        $query = $this->db->query(\"SELECT id,Choir_title FROM Choir\");\r\n        foreach ($query->result_array() as $row) {\r\n            $data[] = $row;\r\n        }return $data;\r\n    }\r\n\r\n    //This function will return rehearsal title which result is not compleated \r\n    public function rehearsalTitleRes($Choir_id) {\r\n        $data = array();\r\n        $query = $this->db->query(\"SELECT id,rehearsal_title FROM add_rehearsal WHERE Choir_id=$Choir_id\");\r\n        foreach ($query->result_array() as $row) {\r\n            $data[] = $row;\r\n        }return $data;\r\n    }\r\n\r\n    //This function will return which song's result will not publish\r\n    public function rehearsalResSong($rehearsalId) {\r\n        $data = array();\r\n        $query = $this->db->query(\"SELECT id,rehearsal_song FROM rehearsal_routine WHERE rehearsal_id='$rehearsalId' \");\r\n        foreach ($query->result_array() as $row) {\r\n            $data[] = $row;\r\n        }return $data;\r\n    }\r\n\r\n    //This function will check Choir_members optional song\r\n    public function che_opt_sub($Choir_member_id, $songTitle) {\r\n        $data = array();\r\n        $query = $this->db->query(\"SELECT id FROM Choir_Choir_members WHERE Choir_member_id=$Choir_member_id AND optional_sub = '$songTitle'\");\r\n        foreach ($query->result_array() as $row) {\r\n            $data[] = $row;\r\n        }\r\n        if (!empty($data)) {\r\n            return TRUE;\r\n        } else {\r\n            return FALSE;\r\n        }\r\n    }\r\n\r\n    //This function is returan Rehearsal Title by RehearsalId.\r\n    public function rehearsalTitle($id) {\r\n        $data = array();\r\n        $query2 = $this->db->query(\"SELECT rehearsal_title FROM add_rehearsal WHERE id=$id\");\r\n        foreach ($query2->result_array() as $row) {\r\n            return $row['rehearsal_title'];\r\n        }\r\n    }\r\n\r\n    //This function is returan Rehearsal  song by RehearsalId.\r\n    public function rehearsalSongTitle($id) {\r\n        $data = array();\r\n        $query = $this->db->query(\"SELECT rehearsal_song FROM rehearsal_routine WHERE id='$id'\");\r\n        foreach ($query->result_array() as $row) {\r\n            return $row['rehearsal_song'];\r\n        }\r\n    }\r\n\r\n    //This function will return rehearsal song by rehearsal id and date\r\n    public function rehearsalSong($a, $b) {\r\n        $data = array();\r\n        $query = $this->db->get_where('rehearsal_routine', array('rehearsal_id' => $a, 'rehearsal_date' => $b));\r\n        foreach ($query->result_array() as $row) {\r\n            return $row['rehearsal_song'];\r\n        }\r\n    }\r\n\r\n    //This function return previous attendance view\r\n    public function previewAttendance($a, $b, $c) {\r\n        $data = array();\r\n        $query = $this->db->get_where('rehearsal_attendanc', array('Choir_id' => $a, 'rehearsal_title' => $b, 'rehearsal_song' => $c));\r\n        foreach ($query->result_array() as $row) {\r\n            $data[] = $row;\r\n        }return $data;\r\n    }\r\n\r\n    //This function gives tyeachers view.\r\n    public function section_leaderInfo($userId) {\r\n        $data = array();\r\n        $query = $this->db->get_where('section_leaders_info', array('user_id' => $userId));\r\n        foreach ($query->result_array() as $row) {\r\n            $data = $row;\r\n        }return $data;\r\n    }\r\n\r\n    //This function return result sheet\r\n    public function checkResultShit($Choir_id, $rehearsalTitle, $song) {\r\n        $data = array();\r\n        $query = $this->db->get_where('result_shit', array('Choir_id' => $Choir_id, 'rehearsal_title' => $rehearsalTitle, 'rehearsal_song' => $song));\r\n        foreach ($query->result_array() as $row) {\r\n            $data[] = $row;\r\n        }return $data;\r\n    }\r\n\r\n    public function approuveSongAmount($Choir_id, $rehearsalTitle) {\r\n        $query = $this->db->get_where('result_submition_info', array('Choir_id' => $Choir_id, 'rehearsal_title' => $rehearsalTitle, 'submited' => '1'));\r\n        foreach ($query->result_array() as $row) {\r\n            $data[] = $row;\r\n        }\r\n        $songAmount = count($data);\r\n        return $songAmount;\r\n    }\r\n\r\n    //This function return Choir song amount\r\n    public function ChoirSongAmount($Choir_id) {\r\n        $song = array();\r\n        $query = $this->db->query(\"SELECT id FROM Choir_song WHERE Choir_id=$Choir_id AND optional!=1\");\r\n        foreach ($query->result_array() as $row) {\r\n            $song[] = $row;\r\n        }\r\n        $songAmount = count($song);\r\n        return $song;\r\n    }\r\n\r\n    //This function return absent amountby any Choir_member id\r\n    public function absent($Choir_memberId) {\r\n        $data = array();\r\n        $query = $this->db->get_where('result_shit', array('Choir_member_id' => $Choir_memberId, 'result' => 'Absent'));\r\n        foreach ($query->result_array() as $row) {\r\n            $data[] = $row;\r\n        }\r\n        if (!empty($data)) {\r\n            $failAmount = count($data);\r\n        } else {\r\n            $failAmount = 0;\r\n        }\r\n        return $failAmount;\r\n    }\r\n\r\n    //This function return fail amount by any Choir_member Id.\r\n    public function fail($Choir_memberId) {\r\n        $data = array();\r\n        $query = $this->db->get_where('result_shit', array('Choir_member_id' => $Choir_memberId, 'result' => 'Fail'));\r\n        foreach ($query->result_array() as $row) {\r\n            $data[] = $row;\r\n        }\r\n        if (!empty($data)) {\r\n            $failAmount = count($data);\r\n        } else {\r\n            $failAmount = 0;\r\n        }\r\n        return $failAmount;\r\n    }\r\n\r\n    //This function return a rehearsal title in a class.\r\n    public function rehearsalTitleForMarkshit($Choir_id) {\r\n        $data = array();\r\n        $query = $this->db->get_where('add_rehearsal', array('Choir_id' => $Choir_id, 'publish' => 'Publish'));\r\n        foreach ($query->result_array() as $row) {\r\n            $data[] = $row;\r\n        }return $data;\r\n    }\r\n\r\n    //THis function count the total point avarage that point.\r\n    public function pointAverage($Choir_memberId, $ChoirSong){\r\n        $data = array();\r\n//      $query = $this->db->get_where('result_shit', array('Choir_member_id' => $Choir_memberId));\r\n        $query = $this->db->query(\"SELECT point FROM result_shit WHERE Choir_member_id=$Choir_memberId\");\r\n        foreach ($query->result_array() as $row) {\r\n            $data[] = $row['point'];\r\n        }\r\n        $totalPoint = array_sum($data);\r\n        $result = $totalPoint / $ChoirSong;\r\n        return round($result, 2);\r\n    }\r\n\r\n    //This function select the grade by the average point.\r\n    public function averageGrade($point) {\r\n        if ($point < 1) {\r\n            $garde = 'F';\r\n        } elseif ($point >= 1 & $point <= 1.99) {\r\n            $garde = 'D';\r\n        } elseif ($point >= 2 & $point <= 2.99) {\r\n            $garde = 'C';\r\n        } elseif ($point >= 3 & $point <= 3.49) {\r\n            $garde = 'B';\r\n        } elseif ($point >= 3.5 & $point <= 3.99) {\r\n            $garde = 'A-';\r\n        } elseif ($point >= 4 & $point <= 4.99) {\r\n            $garde = 'A';\r\n        } elseif ($point >= 5) {\r\n            $garde = 'A+';\r\n        }\r\n        return $garde;\r\n    }\r\n\r\n    //This function count the total mark for Choir_member's rehearsal.\r\n    public function totalMark($Choir_memberId) {\r\n        $data = array();\r\n        $query = $this->db->get_where('result_shit', array('Choir_member_id' => $Choir_memberId));\r\n        foreach ($query->result_array() as $row) {\r\n            $data[] = $row['mark'];\r\n        }\r\n        $totalPoint = array_sum($data);\r\n        return $totalPoint;\r\n    }\r\n\r\n    //This function return the data for final reslt.\r\n    public function finalResultShow($Choir_id, $rehearsalTitle) {\r\n        $data = array();\r\n        $query = $this->db->get_where('result_shit', array('Choir_id' => $Choir_id, 'rehearsal_title' => $rehearsalTitle));\r\n        foreach ($query->result_array() as $row) {\r\n            $data[] = $row;\r\n        }\r\n        return $data;\r\n    }\r\n\r\n    //This function help to publish the result.\r\n    public function publish($a, $b) {\r\n        $data = array();\r\n        $query = $this->db->get_where('result_action', array('status' => $a, 'publish' => $b));\r\n        foreach ($query->result_array() as $row) {\r\n            $data[] = $row;\r\n        }return $data;\r\n    }\r\n\r\n    //This function return markshit by rehearsaltitle,class title and Choir_member id.\r\n    public function markshit($rehearsalId, $Choir_id, $Choir_memberId) {\r\n        $data = array();\r\n        $query = $this->db->get_where('result_shit', array('rehearsal_id' => $rehearsalId, 'Choir_id' => $Choir_id, 'Choir_member_id' => $Choir_memberId));\r\n        foreach ($query->result_array() as $row) {\r\n            $data[] = $row;\r\n        }return $data;\r\n    }\r\n\r\n    //This function will return Choir_member id by user id\r\n    public function Choir_member_id($user_id) {\r\n        $data = array();\r\n        $query = $this->db->query(\"SELECT Choir_member_id FROM Choir_member_info WHERE user_id='$user_id'\");\r\n        foreach ($query->result_array() as $row) {\r\n            $data = $row['Choir_member_id'];\r\n        }\r\n        return $data;\r\n    }\r\n}\r\n"
        }
    ]
}